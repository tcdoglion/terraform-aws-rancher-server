#cloud-init
write_files:
  - path: /etc/rc.local
    permissions: "0755"
    owner: root
    content: |      
      #!/bin/bash
      echo Starting rc.local >> /tmp/x.start
      docker info >> /tmp/x.start 2>&1
      date >> /tmp/x.start 2>&1
      nohup /etc/rancher-ha.sh >> /tmp/x.start 2>&1 &
      date >> /tmp/x.start 2>&1
  - path: /etc/rancher-ha.sh
    permissions: "0755"
    owner: root
    content: |      
      #!/bin/bash
      set -e
      umask 077
      
      IMAGE=$1
      if [ "$IMAGE" = "" ]; then
          IMAGE=rancher/server
      fi
      
      mkdir -p /var/lib/rancher/etc/server
      mkdir -p /var/lib/rancher/etc/ssl
      mkdir -p /var/lib/rancher/bin

      echo sleeping for 30 secs for docker to be available
      sleep 30
      echo Creating /var/lib/rancher/etc/server.conf
      date
      cat > /var/lib/rancher/etc/server.conf << EOF
      export CATTLE_HA_CLUSTER_SIZE=${manager_cluster_size}
      export CATTLE_HA_HOST_REGISTRATION_URL=${host_registration_url}
      export CATTLE_HA_CONTAINER_PREFIX=rancher-ha-
      
      export CATTLE_DB_CATTLE_MYSQL_HOST=${database_host}
      export CATTLE_DB_CATTLE_MYSQL_PORT=${database_port}
      export CATTLE_DB_CATTLE_MYSQL_NAME=${database_name}
      export CATTLE_DB_CATTLE_USERNAME=${database_username}
      export CATTLE_DB_CATTLE_PASSWORD=${database_password}
      
      export CATTLE_HA_PORT_REDIS=6379
      export CATTLE_HA_PORT_SWARM=2376
      export CATTLE_HA_PORT_HTTP=80
      export CATTLE_HA_PORT_HTTPS=443
      export CATTLE_HA_PORT_PP_HTTP=81
      export CATTLE_HA_PORT_PP_HTTPS=444
      export CATTLE_HA_PORT_ZK_CLIENT=2181
      export CATTLE_HA_PORT_ZK_QUORUM=2888
      export CATTLE_HA_PORT_ZK_LEADER=3888
      
      # Uncomment below to force HA enabled and not require one to set it in the UI
      # export CATTLE_HA_ENABLED=true
      EOF
      
      echo Creating /var/lib/rancher/etc/server/encryption.key
      if [ -e /var/lib/rancher/etc/server/encryption.key ]; then
          mv /var/lib/rancher/etc/server/encryption.key /var/lib/rancher/etc/server/encryption.key.`date '+%s'`
      fi
      cat > /var/lib/rancher/etc/server/encryption.key << EOF
      ${encryption_key}
      EOF
      
      
      echo Creating /var/lib/rancher/bin/rancher-ha-start.sh
      cat > /var/lib/rancher/bin/rancher-ha-start.sh << "EOF"
      #!/bin/sh
      set -e
      
      IMAGE=$1
      if [ "$IMAGE" = "" ]; then
          echo Usage: $0 DOCKER_IMAGE
          exit 1
      fi
      
      docker rm -fv rancher-ha >/dev/null 2>&1 || true
      ID=`docker run --restart=always -d -v /var/run/docker.sock:/var/run/docker.sock --name rancher-ha --net host --privileged -v /var/lib/rancher/etc:/var/lib/rancher/etc $IMAGE ha`
      
      echo Started container rancher-ha $ID
      echo Run the below to see the logs
      echo
      echo docker logs -f rancher-ha
      EOF
      
      chmod +x /var/lib/rancher/bin/rancher-ha-start.sh
      
      echo Running: /var/lib/rancher/bin/rancher-ha-start.sh $IMAGE
      echo To re-run please execute: /var/lib/rancher/bin/rancher-ha-start.sh $IMAGE
      exec /var/lib/rancher/bin/rancher-ha-start.sh $IMAGE
      echo END OF DOCKER HA START
      echo date
